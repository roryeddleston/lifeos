generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/* -------------------- Habits -------------------- */

model Habit {
  id           String        @id @default(cuid())
  name         String
  createdAt    DateTime      @default(now())
  completions  HabitRecord[] @relation("HabitCompletions")
  userId       String

  @@index([userId, createdAt])
}

model HabitRecord {
  id        String   @id @default(cuid())
  date      DateTime
  completed Boolean  @default(false)

  habit     Habit    @relation("HabitCompletions", fields: [habitId], references: [id], onDelete: Cascade)
  habitId   String

  @@unique([habitId, date], name: "habitId_date")
  @@index([habitId, completed, date])
  @@index([date])
}

/* -------------------- Tasks -------------------- */

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}

model Task {
  id          String      @id @default(cuid())
  title       String
  description String?
  dueDate     DateTime?
  status      TaskStatus  @default(TODO)
  createdAt   DateTime    @default(now())
  position    Int         @default(0)
  userId      String
  completedAt DateTime?

  @@index([status, completedAt])
  @@index([status, dueDate, createdAt])
  @@index([userId, status, dueDate])
  @@index([userId, createdAt])
  @@index([userId, position])
  @@index([dueDate])
}

/* -------------------- Goals -------------------- */

model Goal {
  id           String   @id @default(cuid())
  title        String
  description  String?
  targetValue  Int
  currentValue Int      @default(0)
  unit         String
  deadline     DateTime?
  createdAt    DateTime @default(now())
  userId       String

  @@index([userId, deadline])
  @@index([userId, createdAt])
}